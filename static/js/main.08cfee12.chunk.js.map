{"version":3,"sources":["components/QuizData.js","components/Quiz.js","reportWebVitals.js","index.js"],"names":["QuizData","id","question","options","answer","Quiz","state","userAnswer","currentIndex","quizEnd","score","disabled","loadQuiz","setState","nextQuestionHander","checkAnswer","disable","finishHandler","length","this","prevProps","prevState","map","item","index","className","option","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.08cfee12.chunk.js","sourcesContent":["export const QuizData = [\n    {\n      id: 0,\n      question: \"What is the best way to have a visual struddle eating experience?\",\n      options: ['standing on top of a building','private jet!', \"do it in the day\", \"struddle and pie at same time\"],\n      answer: 'private jet!'\n    },\n    {\n      id: 1,\n      question: \"how to you fix a crooked eyes?\",\n      options: ['you cannot fix it','slap that face real hard with the palm of your hand', \"do some hoppings\", \"bend over\"],\n      answer: 'you cannot fix it'\n    },\n    {\n      id: 2,\n      question: \"What is the best way to have a visual pie eating experience?\",\n      options: ['scissors','like a dog', 'hard as rock', '!handstand'],\n      answer: '!handstand!'\n    },\n    {\n      id: 3,\n      question: \"What is the name of the one thing that can jump between state?\",\n      options: ['finite-automata','turing machine', \"it does not matter\", \"Context free gramma\"],\n      answer: \"Context free gramma\"\n    },\n    {\n      id: 4,\n      question: \"When was the founder of group theory died\",\n      options: ['1899','1923', \"2012\", \"2021\"],\n      answer: '1899'\n    },\n\n]\n","import React, {Component } from 'react'\nimport {QuizData} from './QuizData'\n\nclass Quiz extends Component{\n  state = {\n    userAnswer: null,\n    currentIndex: 0,\n    options: [],\n    quizEnd: false,\n    score: 0,\n    disabled: true\n  }\n\n  loadQuiz = () => {\n    const {currentIndex} = this.state\n    this.setState(() =>{\n      return {\n          question: QuizData[currentIndex].question,\n          options: QuizData[currentIndex].options,\n          answer: QuizData[currentIndex].answer\n      }\n    })\n  }\n\n  nextQuestionHander = () =>{\n    const {userAnswer, answer, score} = this.state\n    this.setState({\n      currentIndex: this.state.currentIndex +1\n    })\n    if(userAnswer === answer){\n      this.setState({\n        score: score + 1\n      })\n    }\n  }\n\n  componentDidMount(){\n    this.loadQuiz();\n  }\n  componentDidUpdate(prevProps, prevState){\n    const{currentIndex} = this.state;\n    if(this.state.currentIndex !== prevState.currentIndex){\n      this.setState( () => {\n        return {\n          disabled: true,\n          question: QuizData[currentIndex].question,\n          options: QuizData[currentIndex].options,\n          answer: QuizData[currentIndex].answer\n        }\n      });\n    }\n  }\n\n  checkAnswer = answer => {\n    this.setState({\n      userAnswer: answer,\n      disable: false\n    })\n  }\n\n  finishHandler =() => {\n    if(this.state.currentIndex === QuizData.length -1){\n      this.setState({\n        quizEnd: true\n      })\n    }\n  }\n  render(){\n    const {question, options, currentIndex, userAnswer, quizEnd} = this.state\n    if(quizEnd){\n      return(\n        <div>\n          <h1>Game Over, Final score is {this.state.score} points</h1>\n          <p>The correct Answers for the quiz are</p>\n          <ul>\n            {QuizData.map((item, index) =>(\n              <li className = 'options'\n                key ={index}>\n                  {item.answer}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n    return(\n      <div>\n        <h2>{question}</h2>\n        <span>{`Question ${currentIndex+1} of ${QuizData.length}`}</span>\n        {options.map( option =>(\n          <p key ={option.id}\n          className = {`option ${userAnswer === option ? \"selected\" : null}`}\n          onClick = {() => this.checkAnswer(option)}>\n            {option}\n          </p>\n        ))}\n        {currentIndex < QuizData.length -1 &&\n        <button\n          className = \"ui inverted button\"\n          disabled = { !this.state.disabled}\n          onClick = {this.nextQuestionHander}\n        >Next Question</button>\n      }\n      {currentIndex === QuizData.length - 1 &&\n        <button\n          className =\"ui inverted button\"\n          disabled = {!this.state.disabled}\n          onClick = {this.finishHandler}\n        >Finish</button>\n\n      }\n      </div>\n    )\n  }\n\n}\nexport default Quiz\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Quiz from './components/Quiz'\n\n// import './style.css';\nimport {QuizData} from './components/QuizData';\n\n\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nfunction App(){\n  return (\n    <div className = \"App\">\n      <Quiz/>\n    </div>\n  )\n}\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App></App>, rootElement)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}